{
  "name": "securezip",
  "displayName": "SecureZip",
  "description": "Securely export your project as a clean ZIP.",
  "publisher": "yugook",
  "version": "1.0.6",
  "icon": "resources/securezip.png",
  "repository": {
    "type": "git",
    "url": "https://github.com/yugook/SecureZip.git"
  },
  "engines": {
    "vscode": "^1.103.0"
  },
  "categories": [
    "Other"
  ],
  "activationEvents": [
    "onCommand:securezip.export",
    "onCommand:securezip.addToIgnore",
    "onCommand:securezip.addPattern",
    "onCommand:securezip.openIgnoreFile",
    "onCommand:securezip.applySuggestedPatterns",
    "onCommand:securezip.createIgnoreFile",
    "onStartupFinished",
    "onView:securezip.view"
  ],
  "main": "./dist/extension.js",
  "contributes": {
    "commands": [
      {
        "command": "securezip.export",
        "title": "%command.export.title%"
      },
      {
        "command": "securezip.addToIgnore",
        "title": "%command.addToIgnore.title%",
        "category": "SecureZip"
      },
      {
        "command": "securezip.addPattern",
        "title": "%command.addPattern.title%",
        "category": "SecureZip"
      },
      {
        "command": "securezip.applySuggestedPatterns",
        "title": "%command.applySuggestedPatterns.title%",
        "category": "SecureZip"
      },
      {
        "command": "securezip.openIgnoreFile",
        "title": "%command.openIgnoreFile.title%",
        "category": "SecureZip"
      },
      {
        "command": "securezip.createIgnoreFile",
        "title": "%command.createIgnoreFile.title%",
        "category": "SecureZip"
      }
    ],
    "viewsContainers": {
      "activitybar": [
        {
          "id": "securezip",
          "title": "SecureZip",
          "icon": "resources/securezip.svg"
        }
      ]
    },
    "views": {
      "securezip": [
        {
          "id": "securezip.view",
          "name": "SecureZip"
        }
      ]
    },
    "viewsWelcome": [
      {
        "view": "securezip.view",
        "contents": "%viewsWelcome.main%"
      }
    ],
    "menus": {
      "explorer/context": [
        {
          "command": "securezip.addToIgnore",
          "when": "resourceScheme == file",
          "group": "securezip@1"
        }
      ],
      "view/title": [
        {
          "command": "securezip.export",
          "when": "view == securezip.view",
          "group": "navigation@0"
        },
        {
          "command": "securezip.openIgnoreFile",
          "when": "view == securezip.view",
          "group": "navigation@1"
        }
      ],
      "view/item/context": [
        {
          "command": "securezip.addPattern",
          "when": "view == securezip.view && viewItem == securezip.suggestion",
          "group": "inline"
        }
      ]
    },
    "configuration": {
      "title": "SecureZip",
      "properties": {
        "secureZip.flags.enableStatusBarButton": {
          "type": "boolean",
          "default": true,
          "description": "%config.enableStatusBarButton.description%"
        },
        "secureZip.commitMessageTemplate": {
          "type": "string",
          "default": "[SecureZip] Automated commit for export: ${date} ${time} (Branch: ${branch}, Tag: ${tag})",
          "description": "%config.commitMessageTemplate.description%"
        },
        "secureZip.tagPrefix": {
          "type": "string",
          "default": "export",
          "description": "%config.tagPrefix.description%"
        },
        "secureZip.additionalExcludes": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "default": [],
          "description": "%config.additionalExcludes.description%"
        },
        "secureZip.includeNodeModules": {
          "type": "boolean",
          "default": false,
          "description": "%config.includeNodeModules.description%"
        }
      }
    }
  },
  "dependencies": {
    "archiver": "^7.0.1",
    "globby": "^14.0.2",
    "simple-git": "^3.27.0"
  },
  "scripts": {
    "vscode:prepublish": "npm run package",
    "compile": "npm run check-types && npm run lint && node esbuild.js",
    "watch": "npm-run-all -p watch:*",
    "watch:esbuild": "node esbuild.js --watch",
    "watch:tsc": "tsc --noEmit --watch --project tsconfig.json",
    "package": "npm run check-types && npm run lint && node esbuild.js --production",
    "postpackage": "npm run sbom",
    "compile-tests": "tsc -p . --outDir out",
    "watch-tests": "tsc -p . -w --outDir out",
    "pretest": "npm run compile-tests && npm run compile && npm run lint",
    "test:unit": "npm run compile-tests && npx mocha out/test/flags.test.js out/test/ignore.test.js",
    "check-types": "tsc --noEmit",
    "lint": "eslint src",
    "test": "vscode-test",
    "sbom": "node scripts/generate-sbom.cjs"
  },
  "devDependencies": {
    "@types/adm-zip": "^0.5.7",
    "@types/mocha": "^10.0.10",
    "@types/node": "22.x",
    "@types/vscode": "^1.103.0",
    "@typescript-eslint/eslint-plugin": "^8.39.0",
    "@typescript-eslint/parser": "^8.39.0",
    "@vscode/test-cli": "^0.0.11",
    "@vscode/test-electron": "^2.5.2",
    "adm-zip": "^0.5.16",
    "esbuild": "^0.25.11",
    "eslint": "^9.32.0",
    "npm-run-all": "^4.1.5",
    "typescript": "^5.9.2"
  }
}
